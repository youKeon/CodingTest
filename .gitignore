### MetaProgrammingSystem template
workspace.xml
junitvmwatcher*.properties
build.properties

# generated java classes and java source files
#   manually add any custom artifacts that can't be generated from the models
#   http://confluence.jetbrains.com/display/MPSD25/HowTo+--+MPS+and+Git
classes_gen
source_gen
source_gen.caches

# generated test code and test results
test_gen
test_gen.caches
TEST-*.xml
junit*.properties

### ATS template
# Compiled C Files
*~
*_?ats.c
*_?ats.o

# Compiled Javascript Files
*_?ats.js

### Java template
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
replay_pid*

### Maven template
target/
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties
.mvn/timing.properties
# https://github.com/takari/maven-wrapper#usage-without-binary-jar
.mvn/wrapper/maven-wrapper.jar

# Eclipse m2e generated files
# Eclipse Core
.project
# JDT-specific (Eclipse Java Development Tools)
.classpath

### JEnv template
# JEnv local Java version configuration file
.java-version

# Used by previous versions of JEnv
.jenv-version

### Scala template
*.class
*.log

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

### Eclipse template
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# CDT- autotools
.autotools

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Annotation Processing
.apt_generated/
.apt_generated_test/

# Scala IDE specific (Scala & Java development for Eclipse)
.cache-main
.scala_dependencies
.worksheet

# Uncomment this line if you wish to ignore the project description file.
# Typically, this file would be tracked if it contains build/dependency configurations:
#.project

### bluej template
# BlueJ: A Java IDE for programming beginners. http://bluej.org

# Editor preferences for a class etc, see http://lists.bluej.org/pipermail/bluej-discuss/2003-May/002351.html
*.ctxt

# Duplicate of project file, see http://www.hs-owl.de/fb5/labor/it/de/if1/vl/IF1JavaOhneBluej.pdf, page 4
bluej.pkh

### Cocos2dx template
# Ignore thumbnails created by windows
Thumbs.db

# Ignore files build by Visual Studio
*.obj
*.exe
*.pdb
*.aps
*.vcproj.*.user
*.vcxproj.user
*.csproj.user
*.vspscc
*_i.c
*.i
*.icf
*_p.c
*.ncb
*.suo
*.tlb
*.tlh
*.bak
*.cache
*.ilk
*.log
[Bb]in
[Dd]ebug/
[Dd]ebug.win32/
*.sbr
*.sdf
obj/
[Rr]elease/
[Rr]elease.win32/
_ReSharper*/
[Tt]est[Rr]esult*
ipch/
*.opensdf
*.opendb
SubmissionInfo
Generated Files
AppPackages
BundleArtifacts
.vs/

# Ignore files build by ndk and eclipse
libs/
bin/
obj/
gen/
assets/
local.properties

# Ignore python compiled files
*.pyc

# Ignore files build by airplay and marmalade
build_*_xcode/
build_*_vc10/

# Ignore files build by xcode
*.mode*v*
*.pbxuser
*.xcbkptlist
*.xcworkspacedata
*.xcuserstate
*.xccheckout
xcschememanagement.plist
.DS_Store
._.*
xcuserdata/
DerivedData/

# Ignore files built by AppCode
.idea/

# Ignore files built by bada
.Simulator-Debug/
.Target-Debug/
.Target-Release/

# Ignore files built by blackberry
Simulator/
Device-Debug/
Device-Release/

# Ignore vim swaps
*.swp
*.swo

# Ignore files created by create_project.py
projects/

# Ignore config files in javascript bindings generator
tools/tojs/user.cfg
# ... userconf.ini generated if running from tools/tojs
tools/tojs/userconf.ini
tools/tolua/userconf.ini
# ... userconf.ini generated if running from tools/jenkins_scripts/mac/android/
tools/jenkins_scripts/mac/android/userconf.ini

# CTags
tags

# ignore files, created with make-all-linux-project script
/lib
/build/linux-build

# Cmake files
CMakeCache.txt
CMakeFiles
Makefile
cmake_install.cmake
CMakeLists.txt.user

# Ignore files generated by console
build/build/
cocos/scripting/lua-bindings/proj.ios_mac/build/
tests/*/runtime/
tests/*/publish/
tests/*/project/proj.android-studio/app/build.xml
tests/*/project/proj.android-studio/app/proguard-project.txt
tests/*/proj.android-studio/app/build.xml
tests/*/proj.android-studio/app/proguard-project.txt

# Android
project.properties
*.iml

# Ignore prebuilt libraries folder
/external/*
!/external/config.json
/templates/lua-template-runtime/runtime
/v*-deps-*.zip
/v*-lua-runtime-*.zip
/v*-console-*.zip
/tools/fbx-conv/
tests/cpp-tests/Resources/audio
/tests/lua-empty-test/src/cocos/
/tests/lua-game-controller-test/src/cocos/
/tests/lua-tests/src/cocos/
/tests/js-tests/res/
/tools/framework-compile/bin/proj_modifier/plutil-win32/
!/tools/framework-compile/bin/

# generated by framework-compile
/templates/*-template-binary/
/prebuilt/
/*/prebuilt-mk/Android.mk
/*/*/prebuilt-mk/Android.mk
/*/*/*/prebuilt-mk/Android.mk
/*/*/*/*/prebuilt-mk/Android.mk
*.xcscmblueprint

### CompressedArchive template

### Mostly from https://en.wikipedia.org/wiki/List_of_archive_formats

## Archiving and compression
# Open source file format. Used by 7-Zip.
*.7z
# Mac OS X, restoration on different platforms is possible although not immediate 	Yes 	Based on 7z. Preserves Spotlight metadata, resource forks, owner/group information, dates and other data which would be otherwise lost with compression.
*.s7z
# Old archive versions only 	Proprietary format
*.ace
# A format that compresses and doubly encrypt the data (AES256 and CAS256) avoiding brute force attacks, also hide files in an AFA file. It has two ways to safeguard data integrity and subsequent repair of the file if has an error (repair with AstroA2P (online) or Astrotite (offline)).
*.afa
# A mainly Korean format designed for very large archives.
*.alz
# Android application package (variant of JAR file format).
*.apk
# ??
*.arc
# Originally DOS, now multiple
*.arj
# Open archive format, used by B1 Free Archiver (http://dev.b1.org/standard/archive-format.html)
*.b1
# Binary Archive with external header
*.ba
# Proprietary format from the ZipTV Compression Components
*.bh
# The Microsoft Windows native archive format, which is also used by many commercial installers such as InstallShield and WISE.
*.cab
# Originally DOS, now DOS and Windows 	Created by Yaakov Gringeler; released last in 2003 (Compressia 1.0.0.1 beta), now apparently defunct. Free trial of 30 days lets user create and extract archives; after that it is possible to extract, but not to create.
*.car
# Open source file format.
*.cfs
# Compact Pro archive, a common archiver used on Mac platforms until about Mac OS 7.5.x. Competed with StuffIt; now obsolete.
*.cpt
# Windows, Unix-like, Mac OS X Open source file format. Files are compressed individually with either gzip, bzip2 or lzo.
*.dar
# DiskDoubler 	Mac OS 			obsolete
*.dd
# ??
*.dgc
# Apple Disk Image upports "Internet-enabled" disk images, which, once downloaded, are automatically decompressed, mounted, have the contents extracted, and thrown away. Currently, Safari is the only browser that supports this form of extraction; however, the images can be manually extracted as well. This format can also be password-protected or encrypted with 128-bit or 256-bit AES encryption.
*.dmg
# Enterprise Java Archive archive
*.ear
# ETSoft compressed archive
*.egg
# The predecessor of DGCA.
*.gca
# Originally DOS 	Yes, but may be covered by patents 	DOS era format; uses arithmetic/Markov coding
*.ha
# MS Windows 	HKI
*.hki
# Produced by ICEOWS program. Excels at text file compression.
*.ice
# Java archive, compatible with ZIP files
*.jar
# Open sourced archiver with compression using the PAQ family of algorithms and optional encryption.
*.kgb
# Originally DOS, now multiple 	Multiple 	Yes 	The standard format on Amiga.
*.lzh
*.lha
# Archiver originally used on The Amiga. Now copied by Microsoft to use in their .cab and .chm files.
*.lzx
# file format from NoGate Consultings, a rival from ARC-Compressor.
*.pak
# A disk image archive format that supports several compression methods as well as splitting the archive into smaller pieces.
*.partimg
# An experimental open source packager (http://mattmahoney.net/dc)
*.paq*
# Open source archiver supporting authenticated encryption, volume spanning, customizable object level and volume level integrity checks (form CRCs to SHA-512 and Whirlpool hashes), fast deflate based compression
*.pea
# The format from the PIM - a freeware compression tool by Ilia Muraviev. It uses an LZP-based compression algorithm with set of filters for executable, image and audio files.
*.pim
# PackIt 	Mac OS 			obsolete
*.pit
# Used for data in games written using the Quadruple D library for Delphi. Uses byte pair compression.
*.qda
# A proprietary archive format, second in popularity to .zip files.
*.rar
# The format from a commercial archiving package. Odd among commercial packages in that they focus on incorporating experimental algorithms with the highest possible compression (at the expense of speed and memory), such as PAQ, PPMD and PPMZ (PPMD with unlimited-length strings), as well as a proprietary algorithms.
*.rk
# Self Dissolving ARChive 	Commodore 64, Commodore 128 	Commodore 64, Commodore 128 	Yes 	SDAs refer to Self Dissolving ARC files, and are based on the Commodore 64 and Commodore 128 versions of ARC, originally written by Chris Smeets. While the files share the same extension, they are not compatible between platforms. That is, an SDA created on a Commodore 64 but run on a Commodore 128 in Commodore 128 mode will crash the machine, and vice versa. The intended successor to SDA is SFX.
*.sda
# A pre-Mac OS X Self-Extracting Archive format. StuffIt, Compact Pro, Disk Doubler and others could create .sea files, though the StuffIt versions were the most common.
*.sea
# Scifer Archive with internal header
*.sen
# Commodore 64, Commodore 128 	SFX is a Self Extracting Archive which uses the LHArc compression algorithm. It was originally developed by Chris Smeets on the Commodore platform, and runs primarily using the CS-DOS extension for the Commodore 128. Unlike its predecessor SDA, SFX files will run on both the Commodore 64 and Commodore 128 regardless of which machine they were created on.
*.sfx
# An archive format designed for the Apple II series of computers. The canonical implementation is ShrinkIt, which can operate on disk images as well as files. Preferred compression algorithm is a combination of RLE and 12-bit LZW. Archives can be manipulated with the command-line NuLib tool, or the Windows-based CiderPress.
*.shk
# A compression format common on Apple Macintosh computers. The free StuffIt Expander is available for Windows and OS X.
*.sit
# The replacement for the .sit format that supports more compression methods, UNIX file permissions, long file names, very large files, more encryption options, data specific compressors (JPEG, Zip, PDF, 24-bit image, MP3). The free StuffIt Expander is available for Windows and OS X.
*.sitx
# A royalty-free compressing format
*.sqx
# The "tarball" format combines tar archives with a file-based compression scheme (usually gzip). Commonly used for source and binary distribution on Unix-like platforms, widely available elsewhere.
*.tar.gz
*.tgz
*.tar.Z
*.tar.bz2
*.tbz2
*.tar.lzma
*.tlz
# UltraCompressor 2.3 was developed to act as an alternative to the then popular PKZIP application. The main feature of the application is its ability to create large archives. This means that compressed archives with the UC2 file extension can hold almost 1 million files.
*.uc
*.uc0
*.uc2
*.ucn
*.ur2
*.ue2
# Based on PAQ, RZM, CSC, CCM, and 7zip. The format consists of a PAQ, RZM, CSC, or CCM compressed file and a manifest with compression settings stored in a 7z archive.
*.uca
# A high compression rate archive format originally for DOS.
*.uha
# Web Application archive (Java-based web app)
*.war
# File-based disk image format developed to deploy Microsoft Windows.
*.wim
# XAR
*.xar
# Native format of the Open Source KiriKiri Visual Novel engine. Uses combination of block splitting and zlib compression. The filenames and pathes are stored in UTF-16 format. For integrity check, the Adler-32 hashsum is used. For many commercial games, the files are encrypted (and decoded on runtime) via so-called "cxdec" module, which implements xor-based encryption.
*.xp3
# Yamazaki zipper archive. Compression format used in DeepFreezer archiver utility created by Yamazaki Satoshi. Read and write support exists in TUGZip, IZArc and ZipZag
*.yz1
# The most widely used compression format on Microsoft Windows. Commonly used on Macintosh and Unix systems as well.
*.zip
*.zipx
# application/x-zoo 	zoo 	Multiple 	Multiple 	Yes
*.zoo
# Journaling (append-only) archive format with rollback capability. Supports deduplication and incremental update based on last-modified dates. Multi-threaded. Compresses in LZ77, BWT, and context mixing formats. Open source.
*.zpaq
# Archiver with a compression algorithm based on the Burrows-Wheeler transform method.
*.zz


### Kotlin template
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
replay_pid*

### Rails template
*.rbc
capybara-*.html
.rspec
/db/*.sqlite3
/db/*.sqlite3-journal
/db/*.sqlite3-[0-9]*
/public/system
/coverage/
/spec/tmp
*.orig
rerun.txt
pickle-email-*.html

# Ignore all logfiles and tempfiles.
/log/*
/tmp/*
!/log/.keep
!/tmp/.keep

# TODO Comment out this rule if you are OK with secrets being uploaded to the repo
config/initializers/secret_token.rb
config/master.key

# Only include if you have production secrets in this file, which is no longer a Rails default
# config/secrets.yml

# dotenv, dotenv-rails
# TODO Comment out these rules if environment variables can be committed
.env
.env*.local

## Environment normalization:
/.bundle
/vendor/bundle

# these should all be checked in to normalize the environment:
# Gemfile.lock, .ruby-version, .ruby-gemset

# unless supporting rvm < 1.11.0 or doing something fancy, ignore this:
.rvmrc

# if using bower-rails ignore default bower_components path bower.json files
/vendor/assets/bower_components
*.bowerrc
bower.json

# Ignore pow environment settings
.powenv

# Ignore Byebug command history file.
.byebug_history

# Ignore node_modules
node_modules/

# Ignore precompiled javascript packs
/public/packs
/public/packs-test
/public/assets

# Ignore yarn files
/yarn-error.log
yarn-debug.log*
.yarn-integrity

# Ignore uploaded files in development
/storage/*
!/storage/.keep
/public/uploads

### AptanaStudio template
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# CDT- autotools
.autotools

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Annotation Processing
.apt_generated/
.apt_generated_test/

# Scala IDE specific (Scala & Java development for Eclipse)
.cache-main
.scala_dependencies
.worksheet

# Uncomment this line if you wish to ignore the project description file.
# Typically, this file would be tracked if it contains build/dependency configurations:
#.project

### mule template
# gitignore template for Mule projects
# website: https://www.mulesoft.com/platform/enterprise-integration
#
# Recommended template: Mule.gitignore

# Java defaults (https://github.com/github/gitignore/blob/master/Java.gitignore) #
# --- #
*.class
# Package Files #
*.jar
*.war
*.ear
# --- #
# Eclipse-specific (https://github.com/github/gitignore/blob/master/Global/Eclipse.gitignore) #
# --- #
*.pydevproject
.metadata
bin/**
tmp/**
tmp/**/*
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
# You may want to remove the sharp symbols here if you are using Maven
.project
.classpath
# External tool builders
.externalToolBuilders/
# Locally stored "Eclipse launch configurations"
*.launch
# CDT-specific
.cproject
# PDT-specific
.buildpath
# --------------- #
# Studio-specific #
# --------------- #
.studio/
flows/
target/
**/*.mflow
catalog/
reports/
.mule/

### AndroidStudio template
# Covers files to be ignored for android development using Android Studio.

# Built application files
*.apk
*.ap_
*.aab

# Files for the ART/Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/
out/

# Gradle files
.gradle
.gradle/
build/

# Signing files
.signing/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio
/*/build/
/*/local.properties
/*/out
/*/*/build
/*/*/production
captures/
.navigation/
*.ipr
*~
*.swp

# Keystore files
*.jks
*.keystore

# Google Services (e.g. APIs or Firebase)
# google-services.json

# Android Patch
gen-external-apklibs

# External native build folder generated in Android Studio 2.2 and later
.externalNativeBuild

# NDK
obj/

# IntelliJ IDEA
*.iml
*.iws
/out/

# User-specific configurations
.idea/caches/
.idea/libraries/
.idea/shelf/
.idea/workspace.xml
.idea/tasks.xml
.idea/.name
.idea/compiler.xml
.idea/copyright/profiles_settings.xml
.idea/encodings.xml
.idea/misc.xml
.idea/modules.xml
.idea/scopes/scope_settings.xml
.idea/dictionaries
.idea/vcs.xml
.idea/jsLibraryMappings.xml
.idea/datasources.xml
.idea/dataSources.ids
.idea/sqlDataSources.xml
.idea/dynamic.xml
.idea/uiDesigner.xml
.idea/assetWizardSettings.xml
.idea/gradle.xml
.idea/jarRepositories.xml
.idea/navEditor.xml

# Legacy Eclipse project files
.classpath
.project
.cproject
.settings/

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.war
*.ear

# virtual machine crash logs (Reference: http://www.java.com/en/download/help/error_hotspot.xml)
hs_err_pid*

## Plugin-specific files:

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Mongo Explorer plugin
.idea/mongoSettings.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

### KonyVisualizer template
# Below list few files not added to gitignore list to support Headless/CI build

# Auto-generated javascript. It's important to note that jssrc at the project root
# can be ignored, but resources/customlibs/jsSrc must NOT be ignored because it stores
# FFI binding code which can only be generated during development.
/jssrc/*
!/resources/customlibs/jsSrc

# Starting with Visualizer 8.0 the Ant Contrib Jar used for the build process will
# be regenerated when the build is fired. If you're using Visualizer 7.x then comment out
# this line. Vis 7.x will not regenerate this jar and ignoring it will break your project.
ant-contrib-0.6.jar

# Binaries Ex:*.apk,*.KAR,
binaries/

# Other Visualizer auto-generated files.
/.webmeta
/.meta
middleware.properties
modules/kony_sdk.js
modules/KonySyncLib.js


# Starting with Vis 7.3 the /sdkplugin.properties file has been moved to
# `/resources/customlibs/sdkplugin.properties` and can be automatically re-created by Vis
# during the build, provided that folder `resources/customlibs` exists -consider adding a `.gitkeep`  #file to it in order to force it into source control.
resources/customlibs/sdkplugin.properties

# The jar's and zip's under these directories can be ignored so long as
# sdkplugin.properties (See above) is also ignored. The missing sdkplugin.properties will
# trigger the regeneration of these jar's and zip's during the build.
resources/customlibs/lib/android/
resources/customlibs/lib/tabrcandroid/
resources/customlibs/lib/iphone/
resources/customlibs/lib/ipad/
resources/customlibs/lib/windows10/
resources/customlibs/lib/winphone10/

# The missing sdkplugin.properties will regenerate below files
resources/customlibs/jsSrc/android/com/konylabs/ffi/N_KonyLogger.java
resources/customlibs/jsSrc/tabrcandroid/com/konylabs/ffi/N_KonyLogger.java
resources/customlibs/jsSrc/kiosk/KonyLogger.js
resources/customlibs/jsSrc/kiosk/KonyLogger.xml
resources/customlibs/jsSrc/windows8/KonyLogger.js
resources/customlibs/jsSrc/windows8/KonyLogger.xml
resources/customlibs/jsSrc/winmobile/KonyLogger.js
resources/customlibs/jsSrc/winmobile/KonyLogger.xml
resources/customlibs/jsSrc/winphone8/KonyLogger.js
resources/customlibs/jsSrc/winphone8/KonyLogger.xml
resources/customlibs/jsSrc/winphone81s/KonyLogger.js
resources/customlibs/jsSrc/winphone81s/KonyLogger.xml
resources/customlibs/jsXml/KonyLogger.js
resources/customlibs/jsXml/KonyLogger.xml
resources/customlibs/jsSrc/kiosk/SSOFFI.js
resources/customlibs/jsSrc/kiosk/SSOFFI.xml
resources/customlibs/jsSrc/windows8/SSOFFI.js
resources/customlibs/jsSrc/windows8/SSOFFI.xml
resources/customlibs/jsSrc/winmobile/SSOFFI.js
resources/customlibs/jsSrc/winmobile/SSOFFI.xml
resources/customlibs/jsSrc/winphone8/SSOFFI.js
resources/customlibs/jsSrc/winphone8/SSOFFI.xml
resources/customlibs/jsSrc/winphone81s/SSOFFI.js
resources/customlibs/jsSrc/winphone81s/SSOFFI.xml
resources/customlibs/jsXml/SSOFFI.js
resources/customlibs/jsXml/SSOFFI.xml
resources/customlibs/jsSrc/android/com/konylabs/ffi/ND_binary_util.java
resources/customlibs/jsSrc/android/com/konylabs/ffi/N_binarydata.java
resources/customlibs/jsSrc/tabrcandroid/com/konylabs/ffi/ND_binary_util.java
resources/customlibs/jsSrc/tabrcandroid/com/konylabs/ffi/N_binarydata.java
resources/customlibs/jsXml/binary.util.js
resources/customlibs/jsXml/binary.util.xml
resources/customlibs/jsXml/binarydata.js
resources/customlibs/jsXml/binarydata.xml

# Visualizer headless build configuration files
HeadlessBuild.properties
HeadlessBuild-Global.properties

# Out-of-the-box NFI bindings for Sync
/nativeapi.json
/nativebindings/Android/*/Kony_SyncV2-Android-*.zip
/nativebindings/Android/*/Kony_SyncV2-Android-*/tern.json
/nativebindings/iOS/*/Kony_SyncV2-iOS-*.zip
/nativebindings/iOS/*/Kony_SyncV2-iOS-*/tern.json

# Auxiliary files generated during a build to expose the widget ID's for testing.
resources/mobile/native/android/values/widgetids.xml
resources/tablet/native/androidtab/values/widgetids.xml

# NPM dependencies folder which gets created for apps using the "Nitro" Cordova integration
# when you choose NOT to use a globally installed Cordova SDK by unchecking
# `Project Settings>Application>Cordova Settings>Use globally installed Cordova version`.
node_modules

# When using the "Nitro" Cordova integration, the Cordova `plugins` and `platforms`
# directories can be ignored as with any Cordova project.
cordovatemp
web/cordova/plugins
web/cordova/platforms

# Auto-generated temporary internationalization files.
resources/i18n/

# Logs created by building from the command line.
velocity.log

# A Logger FFI that gets bundled with each project and is auto-generated by Visualizer with each build.
resources/customlibs/jsSrc/android/com/konylabs/ffi/N_KonyLogger.java
resources/customlibs/jsSrc/tabrcandroid/com/konylabs/ffi/N_KonyLogger.java
resources/customlibs/jsSrc/kiosk/KonyLogger.js
resources/customlibs/jsSrc/kiosk/KonyLogger.xml
resources/customlibs/jsSrc/windows8/KonyLogger.js
resources/customlibs/jsSrc/windows8/KonyLogger.xml
resources/customlibs/jsSrc/winmobile/KonyLogger.js
resources/customlibs/jsSrc/winmobile/KonyLogger.xml
resources/customlibs/jsSrc/winphone8/KonyLogger.js
resources/customlibs/jsSrc/winphone8/KonyLogger.xml
resources/customlibs/jsSrc/winphone81s/KonyLogger.js
resources/customlibs/jsSrc/winphone81s/KonyLogger.xml
resources/customlibs/jsXml/KonyLogger.js
resources/customlibs/jsXml/KonyLogger.xml

# A Single Sign-On FFI that gets bundled with each project and is auto-generated by Visualizer with each build.
resources/customlibs/jsSrc/kiosk/SSOFFI.js
resources/customlibs/jsSrc/kiosk/SSOFFI.xml
resources/customlibs/jsSrc/windows8/SSOFFI.js
resources/customlibs/jsSrc/windows8/SSOFFI.xml
resources/customlibs/jsSrc/winmobile/SSOFFI.js
resources/customlibs/jsSrc/winmobile/SSOFFI.xml
resources/customlibs/jsSrc/winphone8/SSOFFI.js
resources/customlibs/jsSrc/winphone8/SSOFFI.xml
resources/customlibs/jsSrc/winphone81s/SSOFFI.js
resources/customlibs/jsSrc/winphone81s/SSOFFI.xml
resources/customlibs/jsXml/SSOFFI.js
resources/customlibs/jsXml/SSOFFI.xml

# A utility FFI that gets bundled with each project and is auto-generated by Visualizer with each build.
resources/customlibs/jsSrc/android/com/konylabs/ffi/ND_binary_util.java
resources/customlibs/jsSrc/android/com/konylabs/ffi/N_binarydata.java
resources/customlibs/jsSrc/tabrcandroid/com/konylabs/ffi/ND_binary_util.java
resources/customlibs/jsSrc/tabrcandroid/com/konylabs/ffi/N_binarydata.java
resources/customlibs/jsXml/binary.util.js
resources/customlibs/jsXml/binary.util.xml
resources/customlibs/jsXml/binarydata.js
resources/customlibs/jsXml/binarydata.xml

# Auto-generated project setting files. Generated the first time you save project settings, even if no changes were made.
/_clouddata/
/appSettings.xml
/context.properties
/defaults/
/projectsplash.xml
/windowsViews.xml

### Ballerina template
*.class
*.log

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

.idea
*.iml
*.ipr
*.iws

# generated files
target
results
.ballerina
/gen
/compiler/ballerina-lang/src/main/resources/grammar/BallerinaLexer.tokens
/tool-plugins/intellij/src/main/antlr/org/ballerinalang/plugins/idea/grammar/BallerinaLexer.tokens
/composer/modules/web/dist-electron/
velocity.log
/composer/modules/web/dist-electron

# gradle
.gradle
build/
gradle-app.setting
!gradle-wrapper.jar
.gradletasknamecache

# mac
.DS_Store

.classpath
.project
.settings
.vscode

### CFWheels template
# unpacked plugin folders
plugins/**/*

# files directory where uploads go
files

# DBMigrate plugin: generated SQL
db/sql

# AssetBundler plugin: generated bundles
javascripts/bundles
stylesheets/bundles

### Flutter template
# Flutter/Dart/Pub related
**/doc/api/
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
.fvm/flutter_sdk
.packages
.pub-cache/
.pub/
build/
coverage/
lib/generated_plugin_registrant.dart
# For library packages, don’t commit the pubspec.lock file.
# Regenerating the pubspec.lock file lets you test your package against the latest compatible versions of its dependencies.
# See https://dart.dev/guides/libraries/private-files#pubspeclock
#pubspec.lock

# Android related
**/android/**/gradle-wrapper.jar
**/android/.gradle
**/android/captures/
**/android/gradlew
**/android/gradlew.bat
**/android/key.properties
**/android/local.properties
**/android/**/GeneratedPluginRegistrant.java

# iOS/XCode related
**/ios/**/*.mode1v3
**/ios/**/*.mode2v3
**/ios/**/*.moved-aside
**/ios/**/*.pbxuser
**/ios/**/*.perspectivev3
**/ios/**/*sync/
**/ios/**/.sconsign.dblite
**/ios/**/.tags*
**/ios/**/.vagrant/
**/ios/**/DerivedData/
**/ios/**/Icon?
**/ios/**/Pods/
**/ios/**/.symlinks/
**/ios/**/profile
**/ios/**/xcuserdata
**/ios/.generated/
**/ios/Flutter/.last_build_id
**/ios/Flutter/App.framework
**/ios/Flutter/Flutter.framework
**/ios/Flutter/Flutter.podspec
**/ios/Flutter/Generated.xcconfig
**/ios/Flutter/app.flx
**/ios/Flutter/app.zip
**/ios/Flutter/flutter_assets/
**/ios/Flutter/flutter_export_environment.sh
**/ios/ServiceDefinitions.json
**/ios/Runner/GeneratedPluginRegistrant.*

# Exceptions to above rules.
!**/ios/**/default.mode1v3
!**/ios/**/default.mode2v3
!**/ios/**/default.pbxuser
!**/ios/**/default.perspectivev3
!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages

### Gradle template
.gradle
**/build/
!src/**/build/

# Ignore Gradle GUI config
gradle-app.setting

# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
!gradle-wrapper.jar

# Avoid ignore Gradle wrappper properties
!gradle-wrapper.properties

# Cache of project
.gradletasknamecache

# Eclipse Gradle plugin generated files
# Eclipse Core
.project
# JDT-specific (Eclipse Java Development Tools)
.classpath

### Spark template
*#*#
*.#*
*.iml
*.ipr
*.iws
*.pyc
*.pyo
*.swp
*~
.DS_Store
.cache
.classpath
.ensime
.ensime_cache/
.ensime_lucene
.generated-mima*
.idea/
.idea_modules/
.project
.pydevproject
.scala_dependencies
.settings
/lib/
R-unit-tests.log
R/unit-tests.out
R/cran-check.out
R/pkg/vignettes/sparkr-vignettes.html
R/pkg/tests/fulltests/Rplots.pdf
build/*.jar
build/apache-maven*
build/scala*
build/zinc*
cache
checkpoint
conf/*.cmd
conf/*.conf
conf/*.properties
conf/*.sh
conf/*.xml
conf/java-opts
conf/slaves
dependency-reduced-pom.xml
derby.log
dev/create-release/*final
dev/create-release/*txt
dev/pr-deps/
dist/
docs/_site
docs/api
sql/docs
sql/site
lib_managed/
lint-r-report.log
log/
logs/
out/
project/boot/
project/build/target/
project/plugins/lib_managed/
project/plugins/project/build.properties
project/plugins/src_managed/
project/plugins/target/
python/lib/pyspark.zip
python/deps
python/test_coverage/coverage_data
python/test_coverage/htmlcov
python/pyspark/python
reports/
scalastyle-on-compile.generated.xml
scalastyle-output.xml
scalastyle.txt
spark-*-bin-*.tgz
spark-tests.log
src_managed/
streaming-tests.log
target/
unit-tests.log
work/
docs/.jekyll-metadata

# For Hive
TempStatsStore/
metastore/
metastore_db/
sql/hive-thriftserver/test_warehouses
warehouse/
spark-warehouse/

# For R session data
.RData
.RHistory
.Rhistory
*.Rproj
*.Rproj.*

.Rproj.user

# For SBT
.jvmopts


### JDeveloper template
# default application storage directory used by the IDE Performance Cache feature
.data/

# used for ADF styles caching
temp/

# default output directories
classes/
deploy/
javadoc/

# lock file, a part of Oracle Credential Store Framework
cwallet.sso.lck

### Dart template
# See https://www.dartlang.org/guides/libraries/private-files

# Files and directories created by pub
.dart_tool/
.packages
build/
# If you're building an application, you may want to check-in your pubspec.lock
pubspec.lock

# Directory created by dartdoc
# If you don't generate documentation locally you can remove this line.
doc/api/

# dotenv environment variables file
.env*

# Avoid committing generated Javascript files:
*.dart.js
*.info.json      # Produced by the --dump-info flag.
*.js             # When generated by dart2js. Don't specify *.js if your
                 # project includes source files written in JavaScript.
*.js_
*.js.deps
*.js.map

.flutter-plugins
.flutter-plugins-dependencies

